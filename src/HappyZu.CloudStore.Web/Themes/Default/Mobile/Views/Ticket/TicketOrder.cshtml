@model HappyZu.CloudStore.Web.Areas.Mobile.Models.Dest.TicketOrderViewModel
    @using Abp.Json
<div class="content native-scroll confirm-order">
    <div data-bind="template:{name:'ticket-template',foreach:Tickets}"></div>
    <a href="javascript:;" data-bind="click:openAllTickets" class="">
        <div class="card">
            <div class="card-content">
                <div class="card-content-inner text-center">
                    <span class="iconfont icon-add"></span> 同时购买该景区其他门票
                </div>
            </div>
        </div>
    </a>
    <form id="myform">
        <div class="card">
            <div class="card-header">联系方式</div>
            <div class="card-content">
                <div class="card-content-inner form-list">
                    <div class="form-row">
                        <div class="row-text">
                            联系人
                        </div>
                        <div class="row-value no-border">
                            <input class="qty-input" name="Contact" data-bind="value:Contact" placeholder="需要填写1个联系人" />
                        </div>
                    </div>
                </div>
                <div class="card-content-inner form-list">
                    <div class="form-row">
                        <div class="row-text">
                            联系手机
                        </div>
                        <div class="row-value no-border">
                            <input class="qty-input" name="Mobile" data-bind="value:Mobile" placeholder="接收确认短信" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="foot-clear"></div>
    </form>
</div>
<div class="bar bar-footer payment-list transactions">
    <div class="payment-content" data-bind="foreach:Tickets">
        <div class="form-row right">
            <div class="row-text" data-bind="text:name">
            </div>
            <div class="row-value" data-bind="text:ShowQuantity">
            </div>
        </div>
    </div>
</div>
<div class="bar bar-footer data-choose payment-box">
    <div class="row no-gutter">
        <div class="col-75">
            <div class="payment-subtotal">
                <div class="subtotal">
                    <label>总额：</label><dfn>￥</dfn><span data-bind="text:TotalPrice">0</span>
                </div>
                <div class="sublist">
                    <a href="javascript:;" class="order-details-btn">明细 <span class="iconfont icon-arrow-down transactions"></span></a>
                </div>
            </div>
        </div>
        <div class="col-25">
            <div class="confirm-order-btn">
                <a href="javascript:;" data-bind="click:SubmitData" class="button button-big button-fill button-warning">去支付</a>
                @*@Url.Action("ChoosePayment", "Ticket", new { area = "Mobile" }, true)*@
            </div>
        </div>
    </div>
</div>
    @section styles{
        <link href="~/Themes/Default/Mobile/content/plugins/zepto.calendar.css" rel="stylesheet" />
    }
@section scripts{
    <script src="~/Themes/Default/Mobile/content/plugins/knockout-3.4.0.js"></script>
    <script src="~/Themes/Default/Mobile/content/plugins/moment.min.js"></script>
    <script src="~/Themes/Default/Mobile/content/plugins/zepto.cookie.min.js"></script>
    <script src="~/Themes/Default/Mobile/content/plugins/sui/js/sm-extend.min.js"></script>
    <script src="~/Themes/Default/Mobile/content/jquery.bootstrap-touchspin.min.js"></script>
    <script src="~/Themes/Default/Mobile/content/plugins/zepto.calendar.js"></script>
    <script src="~/Themes/Default/Mobile/content/plugins/zepto.form.min.js"></script>
    <script type="text/html" id="ticket-template">
        <div class="card">
            <div class="card-header">
                <div class="header-title" data-bind="text:name">

                </div>
                <div class="header-active">
                    <a href="javascript:;" class="ticket-description">购买须知</a>
                    <a href="javascript:;" data-bind="visible:$parent.Tickets().length>1,click:$root.removeTicket" class="remove-ticket"><span class="iconfont icon-delete"></span></a>
                </div>
            </div>
            <div class="card-content">
                <div class="card-content-inner form-row">
                    <div class="row-text">使用日期</div>
                    <div class="row-value choose-date-box" data-bind="template:{name:'ticket-quotes',foreach:Quotes}"></div>
                </div>
            </div>
            <div class="card-footer form-row">
                <div class="row-text">
                    购买份数
                </div>
                <div class="row-value ticket-quantity">
                    <input class="qty-input" data-bind="value:Quantity"/>
                </div>
            </div>
        </div>
    </script>
    <script type="text/html" id="ticket-quotes">
        <div class="choose-date " data-bind="css: { selected: Selected }">
            <div class="choose-item" data-bind="visible: $index()<2,click:$root.ChangeDate">
                <label data-bind="text:DateName"></label>
                <div class="price">
                    <dfn>$</dfn>
                    <span data-bind="text:quote.price"></span>
                </div>
            </div>
            <div class="choose-item more" data-bind="visible: $index()>1,click:$root.showCalendar">
                <label data-bind="text:DateName"></label>
                <div class="price">
                    <dfn>$</dfn>
                    <span data-bind="text:MorePrice"></span>
                </div>
            </div>
        </div>
    </script>
    <script type="text/html" id="ticket-list">
        <dl class="ticket-detail-list" data-bind="visible:Tickets().length>0">
            <dt class="ticket-title" data-bind="text:TicketType.name"></dt>
            <div data-bind="template: { name: 'ticket-list-item', foreach: Tickets }"></div>
        </dl>
    </script>

    <script type="text/html" id="ticket-list-item">
        <dd>
            <div class="ticket-item-info">
                <div class="ticket-item-title" data-bind="text:name"></div>
                <div class="ticket-item-box">
                    <label class="ticket-item-tag" data-bind="visible:!mustAdvance">今日票</label>
                    <label class="ticket-item-tag" data-bind="visible:mustAdvance,text:'提前'+advanceBookingDays+'天预订'"></label>
                </div>
                <div class="ticket-item-detailed">
                    <a href="javascript:;" data-bind="click:$root.openTicketNotice">购买须知</a>
                </div>
            </div>
            <div class="ticket-item-price-box">
                <div class="ticket-item-price">
                    <div class="old-price"><dfn>$</dfn><span data-bind="text:marketPrice"></span></div>
                    <div class="price"><dfn>$</dfn><span data-bind="text:price"></span></div>
                </div>
                <div class="ticket-book-content">
                    <a data-bind="click:$root.checkTicket,attr:{'ticketid':id}" class="ticket-book-btn">
                        <span class="online-peyment">在线支付</span>
                        <span class="book-btn-text">预订</span>
                    </a>
                </div>
            </div>
        </dd>
    </script>
    <script>
        var validConfig = {
            Contact: {
                required: '联系人不能为空'
            },
            Mobile: {
                required: '手机号码不能为空',
                reg: {
                    exp: /^(0|86|17951)?(13[0-9]|15[012356789]|17[0-9]|18[0-9]|14[57])[0-9]{8}$/,
                    msg: '请输入正确的手机号码'
                }
            }
        }

        $("#myform")
            .validate({
                validConf: validConfig,
                touch: true,
                loadingTxt: '正在提交...',
                defaultTxt: '提交定制',
                submitBtn: $('.submit-btn'),
                alertFn: function(msg) {
                    $.alert(msg);
                }, // 弹窗提示函数
                validSuccess: function(json) {
                    vm.confirmOrder();
                }
            });
    </script>
    <script>
        var ticketsPage = $('#tickets_page');
        if (ticketsPage.length <= 0) {
            $('div.page-group')
                .append('<div class="page" id="tickets_page"><header class="bar bar-nav header-nav"><a class="button button-link button-nav pull-left back" href="javascript:;"><span class="icon icon-left"></span></a><h1 class="title">全部门票</h1></header><div class="content native-scroll"><div id="tickets-content" class="ticket-detail-box"></div></div></div>');
            $('#tickets-content').html('<div data-bind="template:{name:\'ticket-list\',foreach:AllTickets}"></div>');
        }
        var ticketVM = @Html.Raw(Model.ToJsonString(true));

        var TicketListItem = function(type) {
            this.TicketType = type;
            this.Tickets = ko.observableArray([]);
        }

        var Ticket = function(ticket) {
            $.extend(this, ticket);
            var $this = this;
            this.Quantity = ko.observable(1);
            this.SelectedQuote = ko.observable();
            this.Quotes = ko.observableArray([]);
            this.AllQuotes = ko.observableArray([]);
            this.ShowQuantity = ko.pureComputed(function() {
                    if ($this.SelectedQuote() != null) {
                        return '￥' + $this.SelectedQuote().quote.price + 'x' + $this.Quantity();
                    }
                    return '￥0' + 'x' + $this.Quantity();
                },
                this);
        };

        var QuoteModel = function(quote) {
            $.extend(this, quote);
            var $this = this;
            this.Selected = ko.observable(false);
            this.DateName = ko.observable();
            this.MorePrice = ko.observable(this.quote.price);
        };

        var closePage = function(currentPage) {
            $(currentPage).removeClass('page-current');
            $('div.page-group .page:not([id])').addClass('page-current');

        }
        var ViewModel = function() {
            var $this = this;
            $this.Contact = ko.observable('');
            $this.Mobile = ko.observable('');
            $this.Tickets = ko.observableArray([]);
            $this.AllTickets = ko.observableArray([]);
            $this.SelectedTicket = ko.observable();
            $this.load = function() {
                var ticket = new Ticket(ticketVM.ticket);
                for (var i = 0; i < ticketVM.ticketQuotes.length; i++) {
                    var quote = new QuoteModel(ticketVM.ticketQuotes[i]);
                    if (i === 0) {
                        quote.Selected(true);
                        ticket.SelectedQuote(quote);
                    }
                    quote.DateName($this.DateName(quote, i));
                    ticket.Quotes.push(quote);
                }
                $this.Tickets.push(ticket);
                $('.ticket-quantity .qty-input').TouchSpin({ min: 1, max: 99 });
            };

            $this.DateName = function(data, index) {

                if (moment().isSame(data.year + '-' + data.month + '-' + data.day, 'Day')) {
                    return '今日';
                }
                if (moment().add(1, 'days').isSame(data.year + '-' + data.month + '-' + data.day, 'Day')) {
                    return '明日';
                }


                if (data.Selected() || index < 2) {
                    return data.month + '月' + data.day + '日';
                } else {
                    return '更多日期';
                }
            };

            $this.GetTicketById = function(id) {
                var tickets = $this.Tickets();
                for (var i = 0; i < tickets.length; i++) {
                    if (tickets[i].id === id) {
                        return tickets[i];
                    }
                }
                return null;
            }
            $this.ChangeDate = function(data) {

                var ticket = $this.GetTicketById(data.ticketId);
                if (ticket != null) {
                    ticket.SelectedQuote(data);
                    var quotes = ticket.Quotes();
                    for (var j = 0; j < quotes.length; j++) {
                        if (quotes[j].id === data.id) {
                            quotes[j].Selected(true);
                        } else {
                            quotes[j].Selected(false);
                        }
                        quotes[j].DateName($this.DateName(quotes[j], j));
                    }
                }
            };
            $this.removeTicket = function(data) {
                $.confirm('确定要删除吗?',
                    function() {
                        $this.Tickets.remove(data);
                    });
            };

            $this.BuildQuoteData = function(items) {
                $('.md_datearea li:not([class~="disabled"])')
                    .each(function(index, item) {
                        var ditem = null;
                        var xindex = 0;
                        for (var i = 0; i < items.length; i++) {
                            ditem = items[i];
                            if (moment(ditem.dateTime)
                                .isSame(moment({
                                        year: $(item).data('year'),
                                        month: $(item).data('month'),
                                        date: $(item).data('day')
                                    }),
                                    'day')) {
                                xindex = i;
                                break;
                            }
                            ditem = null;
                        }
                        if (ditem != null) {
                            $(item).data('index', xindex);
                            $(item).children('span').html('￥' + ditem.quote.price);

                        } else {
                            $(item).addClass('disabled');
                        }
                    });
            }

            $this.showCalendar = function(data) {
                var about = $('#calendar_page');
                if (about.length <= 0) {
                    $('div.page-group')
                        .append('<div class="page" id="calendar_page"><header class="bar bar-nav header-nav"><a class="button button-link button-nav pull-left back" href="javascript:;"><span class="icon icon-left"></span></a><h1 class="title">选择使用日期</h1></header><div class="content native-scroll"><div class="md_container"></div></div></div>');
                }
                var ticket = $this.GetTicketById(data.ticketId);
                var selectedDate = moment();
                if (ticket.SelectedQuote() != null) {
                    selectedDate = moment(ticket.SelectedQuote().year +
                        '-' +
                        ticket.SelectedQuote().month +
                        '-' +
                        ticket.SelectedQuote().day,
                        'YYYY-MM-DD');
                }
                $this.SelectedTicket(ticket);

                $('div.page-group .page').removeClass('page-current');
                $('#calendar_page').addClass('page-current');
                var minDate = moment(ticket.startDate),
                    maxDate = moment(ticket.endDate);
                if (moment().isAfter(minDate, 'day')) {
                    minDate = moment();
                }

                var url = '@Url.Action("GetQuotesByTicket", "Ticket", new {area = "Mobile"})';

                $('#calendar_page .md_container')
                    .mdater(
                    {
                        minDate: minDate.toDate(),
                        maxDate: maxDate.toDate(),
                        callback: function(index, date) {
                            var ticket = $this.SelectedTicket();
                            $this.SelectedTicket(null);
                            closePage('#calendar_page');

                            var quotes = ticket.Quotes();
                            var hasQuote = false;
                            for (var i = 0; i < quotes.length; i++) {
                                if (moment(quotes[i].year + '-' + quotes[i].month + '-' + quotes[i].day, 'YYYY-MM-DD')
                                    .isSame(date)) {
                                    hasQuote = true;
                                    quotes[i].Selected(true);
                                    ticket.SelectedQuote(quotes[i]);
                                } else {
                                    quotes[i].Selected(false);
                                }
                                quotes[i].DateName($this.DateName(quotes[i], i));
                            }
                            if (hasQuote) {
                                return;
                            }

                            var oquote = ticket.AllQuotes()[index];
                            var quote = quotes[2];
                            quote = $.extend(quote, oquote);
                            quote.MorePrice(quote.quote.price);
                            ticket.SelectedQuote(quote);
                            quote.Selected(true);
                            quote.DateName($this.DateName(quote, 2));
                            $this.ChangeDate(quote);
                        },
                        value: selectedDate.format('YYYY-MM-DD')
                    });

                if (ticket.AllQuotes().length <= 0) {
                    $.showPreloader();
                    $.post(url,
                        { id: ticket.id, minDate: minDate.format('YYYY-MM-DD'), maxDate: maxDate.format('YYYY-MM-DD') },
                        function(data, status, xhr) {
                            $.hidePreloader();
                            if (!data.success) {
                                return;
                            }
                            var items = data.result.items;
                            for (var i = 0; i < items.length; i++) {
                                ticket.AllQuotes.push(items[i]);
                            }
                            $this.BuildQuoteData(items);
                        },
                        'json');
                } else {
                    $this.BuildQuoteData(ticket.AllQuotes());
                }

            }

            $this.TotalPrice = ko.pureComputed(function() {
                    var tickets = $this.Tickets();
                    var total = 0;
                    for (var i = 0; i < tickets.length; i++) {
                        if (tickets[i].SelectedQuote() != null) {
                            total += tickets[i].Quantity() * tickets[i].SelectedQuote().quote.price;
                        }
                    }
                    return total;
                },
                this);

            $this.loadAllTickets = function() {
                var url = '@Url.Action("GetTicketsByDest", "Ticket", new {area = "Mobile"}, true)';
                var params = { id: @Model.Ticket.DestId };
                $.showPreloader();
                $.post(url,
                    params,
                    function(data) {
                        $.hidePreloader();
                        if (data.success) {
                            var tickettype = data.result.ticketType;
                            var tickets = data.result.tickets;
                            if (tickettype != null && tickettype.totalCount > 0) {
                                for (var i = 0; i < tickettype.items.length; i++) {
                                    var item = new TicketListItem(tickettype.items[i]);
                                    if (tickets.totalCount > 0) {
                                        for (var j = 0; j < tickets.items.length; j++) {
                                            if (tickets.items[j].typeId === item.TicketType.id) {
                                                item.Tickets.push(tickets.items[j]);
                                            }
                                        }
                                    }
                                    $this.AllTickets.push(item);
                                }
                            }

                            $this.canChecked();
                        }
                    },
                    'json');
            }

            $this.openAllTickets = function() {
                if ($this.AllTickets().length <= 0) {
                    $this.loadAllTickets();
                }
                $('div.page-group .page').removeClass('page-current');
                $('#tickets_page').addClass('page-current');
                $this.canChecked();
            }

            $this.canChecked = function(data) {

                var tickets = $this.Tickets();

                $('.ticket-book-btn').removeClass('disabled');
                for (var i = 0; i < tickets.length; i++) {
                    $('.ticket-book-btn[ticketid="' + tickets[i].id + '"]').addClass('disabled');
                }

                return true;
            };

            $this.checkTicket = function(data) {
                var tickets = $this.Tickets();
                for (var i = 0; i < tickets.length; i++) {
                    if (tickets[i].id === data.id) {
                        $.toast("已经添加了这个票种");
                        return;
                    }
                }

                var ticket = new Ticket(data);
                $this.Tickets.push(ticket);
                $('.ticket-quantity .qty-input').TouchSpin({ min: 1, max: 99 });

                var minDate = moment(ticket.startDate),
                    maxDate = moment(ticket.endDate);
                if (moment().isAfter(minDate, 'day')) {
                    minDate = moment();
                }

                var url = '@Url.Action("GetQuotesByTicket", "Ticket", new {area = "Mobile"})';
                $.showPreloader();
                $.post(url,
                    { id: ticket.id, minDate: minDate.format('YYYY-MM-DD'), maxDate: maxDate.format('YYYY-MM-DD') },
                    function(data, status, xhr) {
                        $.hidePreloader();
                        if (!data.success) {
                            return;
                        }
                        var items = data.result.items;
                        for (var i = 0; i < items.length; i++) {
                            ticket.AllQuotes.push(items[i]);
                            if (i < 3) {
                                var quote = new QuoteModel(items[i]);
                                if (i === 0) {
                                    quote.Selected(true);
                                    ticket.SelectedQuote(quote);
                                }
                                quote.DateName($this.DateName(quote, i));
                                ticket.Quotes.push(quote);
                            }
                        }
                        $this.BuildQuoteData(items);
                    },
                    'json');

                closePage('#tickets_page');
            }

            $this.openTicketNotice = function(data) {

            }
            $this.SubmitData = function() {
                $('#myform').submit();
            }
            $this.confirmOrder = function() {
                var url = '@Url.Action("ConfirmTicketOrder", "Ticket", new {area = "Mobile"}, true)';

                var params = { Mobile: $this.Mobile(), Contact: $this.Contact, Tickets: [] };

                var tickets = $this.Tickets();

                for (var i = 0; i < tickets.length; i++) {
                    var ticket = tickets[i];
                    var quote = ticket.SelectedQuote();
                    params.Tickets.push({ TicketId: ticket.id, TicketQuoteId: quote.id, Quantity: ticket.Quantity() });
                }
                $.showPreloader('正在创建订单');
                $.post(url,
                    params,
                    function(data) {
                        $.hidePreloader();
                        if (data.success) {
                            if (data.result.entityId>0) {
                                window
                                    .location =
                                    '@Url.Action("ChoosePayment", "Ticket", new { area = "Mobile" }, true)/' +
                                    data.result.entityId;

                                return;
                            }
                            $.toast("订单生成错误,请稍后重试!");
                        } else {
                            $.alert(data.error.message);
                        }
                    },
                    'json');
            };
        };

        var vm = new ViewModel();
        ko.applyBindings(vm);

        $(function() {
            vm.load();

            $(document)
                .on("touchspin.on.min",
                    '.qty-input',
                    function() {
                        $.toast("最少要购买1份");
                    });

            $('.order-details-btn')
                .on('click',
                    function() {
                        var $this = $(this);
                        if (!$this.hasClass('selected')) {
                            $this.addClass('selected');
                            $('.payment-list').addClass('show').height(vm.Tickets().length * 44);
                        } else {
                            $this.removeClass('selected');
                            $('.payment-list').removeClass('show').height(44);
                        }
                    });

            $(document)
                .on('click',
                    '#calendar_page a.back',
                    function() {
                        closePage('#calendar_page');
                    });
            $(document)
                .on('click',
                    '#tickets_page a.back',
                    function() {
                        closePage('#tickets_page');
                    });
        });

    </script>
}